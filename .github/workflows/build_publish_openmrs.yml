name: Build and Publish
on:
  push:
    branches: [release-oca]
  workflow_dispatch:

jobs:
  build-publish-docker:
    name: Build & Publish Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Get Code
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.MALAYSIA_LITE_AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.MALAYSIA_LITE_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.MALAYSIA_LITE_AWS_REGION }}

      - name: Download OMODs
        env:
          BUCKET_NAME: bahmni-artifacts
        run: |
          aws s3 cp s3://$BUCKET_NAME/bahmni-lite/release-1.0.0/patient-identifier-generator/ target/ --recursive

      - name: Build docker image
        run: |
          docker build -t openmrs-release:latest -f package/docker/openmrs/Dockerfile .
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'openmrs-release:latest'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          trivyignores: ./.trivyignore
          vuln-type: 'os,library'
          severity: 'CRITICAL'

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set Image tag varaible
        run: echo "ARTIFACT_VERSION=$(cat package/.appversion)" >> $GITHUB_ENV

      - name: Tag and Push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: msf-oca-his/openmrs-release
          IMAGE_TAG: ${{ env.ARTIFACT_VERSION }}
        run: |
          docker tag openmrs-release:latest $REGISTRY/$REPOSITORY:latest
          docker tag openmrs-release:latest $REGISTRY/$REPOSITORY:$IMAGE_TAG
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
          docker push $REGISTRY/$REPOSITORY:latest